<?php

class BakeryUserTests extends DrupalWebTestCase {

    // protected $privilegedUser;

    public static function getInfo() {
      return array(
        'name' => 'Bakery User Test',
        'description' => 'Ensure that the bakery_user module functions properly.',
        'group' => 'Epicodus Examples Tests',
      );
    }

    public function drupalCreateAdminUser(array $permissions = array()) {
        $roles = user_roles();
        $index = array_search('administrator', $roles);
        $user = $this->drupalCreateUser($permissions);
        $user->roles[$index] = 'administrator';
        return user_save($user);
    }

    public function drupalCreateAuthenticatedUser(array $permissions = array()) {
        $roles = user_roles();
        $index = array_search('authenticated', $roles);
        $user = $this->drupalCreateUser($permissions);
        $user->roles[$index] = 'authenticated';
        return user_save($user);
    }

    public function setUp() {
      parent::setUp(array('bakery_user', 'subject'));


      $user = $this->drupalCreateAdminUser();
      $this->drupalLogin($user);

      $info = array();
      $info['title'] = "Welcome!";
      $info["body[und][0][value]"] = "Welcome to Cameron's!";
      $info['comment'] = 2;

      $this->drupalPost('node/add/page', $info, t('Save'));

      $path['source'] = 'node/1';
      $path['alias'] = 'welcome_new_user';
      path_save($path);
    }

    public function testWelcomeNewUser() {
        $this->drupalGet('welcome_new_user');
        $this->assertText("Welcome to Cameron's!", 'The text on the page is correct!');
    }

    public function testLoginWelcome() {
        $user = $this->drupalCreateAuthenticatedUser();
        $this->drupalLogin($user);
        $this->assertText("Welcome to Cameron's!", 'The user was successfully redirected.');
    }

    public function testRemoveSubject() {
        $user = $this->drupalCreateAuthenticatedUser();
        $this->drupalLogin($user);
        $this->drupalGet('welcome_new_user');
        $this->assertText("Add new comment", 'The comments are enabled.');
        $this->assertNoText("Subject", 'The subject field was successfully removed.');
    }

}
